\section{Introduction}
\label{intro}
Here we describe the problem that we wish to address and the proposed solution.
\subsection{Problem Description}
\par{specRTL is a language which provides a compositional specification mechanism for defining patterns that describe RTL templates in machine descriptions. The description of the language and its power is not in the scope of the project, but specific explainations will be provided wherever necessary. The specRTL language allows one to create patterns, both abstract and concrete (concrete patterns extend from abstract patterns).} \\
\noindent{It is however, difficult to visualize the scale and shape of the pattern once it goes beyond a certain size and hence hampers writing complex patterns. A tool is therefore needed to address this issue and provide means of visualizing the tree as it is being written.}
\subsection{Solution}
\par{The goal of the project is to provide a seamless interface where a user can provide the specRTL description and would be presented with the appropriate n-ary tree representing the pattern. We have prepared such a tool using \emph{C++} and \emph{QT graphics library}. It is a GUI desktop applications with the use cases as given below. We have tried to make the application scalable and loosely coupled.}
\noindent{The tool supports the following operations:}
\begin{itemize}
 \item Browze for and load external specRTL files.
 \item Display the tree of the loaded file.
 \item Edit a previously loaded file and display the tree.
 \item Create new specRTL files.
 \item Allow for easy way to browse the patterns in a file, in case it has multiple patterns specified.
 \item Highlight the pattern being displayed as a tree, in the specRTL source file.
 \item Should be robust.
 \item Allows for interactivity with the generated tree by letting the user:
 \begin{itemize}
  \item Switch the colors of nodes.
  \item Allow for zoom in and zoom out.
  \item Expand and collapse nodes of the tree.
 \end{itemize} 
\end{itemize}
\noindent{The parser for the language is not in scope of this project, we have used the parser already written by other students and integrated it with our application. We have however, made changes to the parser in order for it to work in a multi-threaded GUI environment. The details will be provided in the sections below.}