
;; GCC machine description for IA-32 and x86-64.
;; Copyright (C) 1988, 1994, 1995, 1996, 1997, 1998, 1999, 2000,
;; 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012
;; Free Software Foundation, Inc.
;; Mostly by William Schelter.
;; x86_64 support added by Jan Hubicka
;;
;; This file is part of GCC.
;;
;; GCC is free software; you can redistribute it and/or modify
;; it under the terms of the GNU General Public License as published by
;; the Free Software Foundation; either version 3, or (at your option)
;; any later version.
;;
;; GCC is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.
;;
;; You should have received a copy of the GNU General Public License
;; along with GCC; see the file COPYING3.  If not see
;; <http://www.gnu.org/licenses/>.  */
;;
;; The original PO technology requires these to be ordered by speed,
;; so that assigner will pick the fastest.
;;
;; See file "rtl.def" for documentation on define_insn, match_*, et. al.
;;
;; The special asm out single letter directives following a '%' are:
;; L,W,B,Q,S,T -- print the opcode suffix for specified size of operand.
;; C -- print opcode suffix for set/cmov insn.
;; c -- like C, but print reversed condition
;; F,f -- likewise, but for floating-point.
;; O -- if HAVE_AS_IX86_CMOV_SUN_SYNTAX, expand to "w.", "l." or "q.",
;;      otherwise nothing
;; R -- print the prefix for register names.
;; z -- print the opcode suffix for the size of the current operand.
;; Z -- likewise, with special suffixes for x87 instructions.
;; * -- print a star (in certain assembler syntax)
;; A -- print an absolute memory reference.
;; E -- print address with DImode register names if TARGET_64BIT.
;; w -- print the operand as if it's a "word" (HImode) even if it isn't.
;; s -- print a shift double count, followed by the assemblers argument
;;	delimiter.
;; b -- print the QImode name of the register for the indicated operand.
;;	%b0 would print %al if operands[0] is reg 0.
;; w --  likewise, print the HImode name of the register.
;; k --  likewise, print the SImode name of the register.
;; q --  likewise, print the DImode name of the register.
;; x --  likewise, print the V4SFmode name of the register.
;; t --  likewise, print the V8SFmode name of the register.
;; h -- print the QImode name for a "high" register, either ah, bh, ch or dh.
;; y -- print "st(0)" instead of "st" as a register.
;; d -- print duplicated register operand for AVX instruction.
;; D -- print condition for SSE cmp instruction.
;; P -- if PIC, print an @PLT suffix.
;; p -- print raw symbol name.
;; X -- don't print any sort of PIC '@' suffix for a symbol.
;; & -- print some in-use local-dynamic symbol name.
;; H -- print a memory address offset by 8; used for sse high-parts
;; Y -- print condition for XOP pcom* instruction.
;; + -- print a branch hint as 'cs' or 'ds' prefix
;; ; -- print a semicolon (after prefixes due to bug in older gas).
;; @ -- print a segment register of thread base pointer load
(define_c_enum "unspec" [
  UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
 UNSPEC_GOT
                           ])
